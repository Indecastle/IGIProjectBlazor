@page "/cm/contextmenu"
@inject IBlazorContextMenuService blazorContextMenuService
<form class="form-inline">
    <label class="sr-only" for="xInput">Location (X)</label>
    <div class="input-group mb-2 mr-sm-2">
        <div class="input-group-prepend">
            <div class="input-group-text">Location (X)</div>
        </div>
        <input @bind="x" type="number" class="form-control" id="xInput" />
    </div>

    <label class="sr-only" for="yInput">Location (Y)</label>
    <div class="input-group mb-2 mr-sm-2">
        <div class="input-group-prepend">
            <div class="input-group-text">Location (Y)</div>
        </div>
        <input @bind="y" class="form-control" id="yInput" />
    </div>

    <div class="form-check mb-2 mr-sm-2">
        <input class="form-check-input" type="checkbox" @bind="autoHide" id="autoClose" />
        <label class="form-check-label" for="autoClose">
            Auto-close
        </label>
    </div>
</form>

<div class="btn-group">
    <button @onclick="ShowBtnClick" class="btn btn-info">Show the context menu</button>
    <button @onclick="HideBtnClick" class="btn btn-info">Hide the context menu</button>
</div>

<ContextMenu Id="manualTriggerMenu" CssClass="z-10" AutoHide="autoHide">
    <Item OnClick="@OnClick">Item 1</Item>
    <Item OnClick="@OnClick">Item 2</Item>
    <Item OnClick="@OnClick">Item 3</Item>
    <Item OnClick="@OnClick">Item 4</Item>
    <Item OnClick="@OnClick">Item 5</Item>
</ContextMenu>

@code {

    private int x = 800;
    private int y = 600;
    private bool autoHide;
    async Task ShowBtnClick()
    {
        await blazorContextMenuService.ShowMenu("manualTriggerMenu", x, y);
    }
    async Task HideBtnClick()
    {
        await blazorContextMenuService.HideMenu("manualTriggerMenu");
    }

    void OnClick(ItemClickEventArgs e)
    {
        Console.WriteLine($"Item Clicked => Menu: {e.ContextMenuId}, MenuTarget: {e.ContextMenuTargetId}, " +
            $"IsCanceled: {e.IsCanceled}, MenuItem: {e.MenuItemElement}, MouseEvent: {e.MouseEvent}");
    }
}