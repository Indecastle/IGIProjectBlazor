@page "/Notifier"

@inject NotifierService Notifier2
@implements IDisposable

<p>Last update: @lastNotification.key = @lastNotification.value</p>
<input type="text" name="name1" @bind-value="text1" class="form-control"/>
<input type="number" name="name2" @bind-value="int1" class="form-control"/>
<button @onclick="click"></button>

@code {
    string text1;
    int int1;
    async Task click()
    {
        await Notifier2.Update(text1, int1);
    }

    private (string key, int value) lastNotification;

    protected override void OnInitialized()
    {
        //Notifier.Cycle();
        Notifier2.Notify += OnNotify;
    }

    public async Task OnNotify(string key, int value)
    {
        await InvokeAsync(() =>
        {
            lastNotification = (key, value);
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        Notifier2.Notify -= OnNotify;
    }
}